name: CI

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]
#  schedule:
#    # Weekly build to make sure dependencies are OK
#    - cron:  '30 14 * * 3'

jobs:
  Source:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        token: ${{ secrets.GH_PAT }}

    - name: Install sdist dependencies
      run: pip3 install setuptools

    - name: Generate source distribution tarball
      run: python3 setup.py sdist

    - name: Build source distribution
      run: |
        sudo apt-get install -y libboost-system-dev libboost-thread-dev libeigen3-dev ninja-build
        pip3 install wheel
        pip3 wheel dist/*.tar.gz

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: source-build
        path: "dist/*.tar.gz"

  Linux:
    runs-on: ubuntu-latest
    needs: Source

    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11']
        architecture: ['x86_64']

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        token: ${{ secrets.GH_PAT }}

    - name: Pull builder image
      run: docker pull quay.io/pypa/manylinux_2_28_${{ matrix.architecture }}

    # - name: Build wheels
    #   run: tools/build/build-wheels.sh ${{ matrix.python }}

    - name: Build wheels
      run: |
        podman run --rm -v `pwd`:/io quay.io/pypa/manylinux_2_28_${{ matrix.architecture }} /io/tools/build/build-wheels.sh ${{ matrix.python }}

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: linux-build
        path: "dist/*.whl"

  MacOS:
    runs-on: macos-latest
    needs: Source

    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11']

    steps:
      - name: Set Deployment Target
        run: export MACOSX_DEPLOYMENT_TARGET=14.0
        
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GH_PAT }}

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          brew install eigen boost
          pip install cmake ninja wheel

      - name: Build
        run: |
          python setup.py bdist_wheel

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: "dist/*.whl"

  Publish:
    runs-on: ubuntu-latest
    needs: [Source, Linux, MacOS]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    permissions:
      contents: write
    steps:
    # Download all the artifacts
    - uses: actions/download-artifact@v3
      with:
        name: source-build
        path: "source-build"

    - uses: actions/download-artifact@v3
      with:
        name: linux-build
        path: "linux-build"

    - uses: actions/download-artifact@v3
      with:
        name: macos-build
        path: "macos-build"

    - name: Move all files into the dist folder
      run: |
        mkdir dist
        cp source-build/* dist/
        cp linux-build/* dist/
        cp macos-build/* dist/
        ls -R dist

    - name: Create GitHub Release and Upload Assets
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*.whl
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          This release includes pre-built wheels for various platforms and Python versions.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
